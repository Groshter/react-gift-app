{"version":3,"sources":["Componentes/AgregarCategoria.js","Helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GrillaGif.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","ValorInput","setValorInput","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","Respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GrillaGif","loading","State","setState","useEffect","then","useFetchGifs","Imagenes","GifExpertApp","Categorias","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAmB,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEjBC,mBAAS,IAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,KAqBrD,OAEI,sBAAMC,SAbO,SAACC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAOlB,SACI,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAvBiB,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVrB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,mDAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAIA,QCHHO,EAAY,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECAd,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAdCC,qBAAU,WAEPxB,EAASC,GACRwB,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKjB,CAACpB,IAEEqB,EDpB2BI,CAAczB,GAAnC0B,EAFyB,EAE/BnB,KAAgBa,EAFe,EAEfA,QAGvB,OACI,eAAC,WAAD,WACI,qBAAIJ,UAAU,+CAAd,cAAgEhB,EAAhE,OAII,sBAAKgB,UAAU,YAAf,UAEMI,GAAW,4CAGTM,EAASjB,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADGA,EAAIC,cElB9BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,SAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,eAAC,WAAD,WACG,8CACA,cAAC,EAAD,CAAkBA,cAAiBA,IACnC,uBAEA,6BAEO2C,EAAWnB,KAAK,SAAAT,GAAS,OACnB,cAAC,EAAD,CAEAA,UAAaA,GADLA,Y,MChBhC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b3409cd9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AgregarCategoria = ( { setCategorias } ) => {\r\n\r\n    const [ValorInput, setValorInput] = useState('');\r\n\r\n    const CambiaValorChange = (e) => {\r\n\r\n        setValorInput( e.target.value );\r\n\r\n    }\r\n\r\n    const OnSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n        if (ValorInput.trim().length > 2) \r\n        {\r\n            setCategorias(categorias => [ValorInput,...categorias ]);\r\n            setValorInput('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n   \r\n        <form onSubmit= { OnSubmit }>\r\n            <input \r\n             type=\"text\"\r\n             value={ ValorInput }\r\n             onChange={ CambiaValorChange }\r\n             \r\n            />\r\n        </form>\r\n    \r\n    )\r\n}\r\n\r\nAgregarCategoria.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n};","\r\nexport const getGifs = async( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=p7biw9PfpbZcn8Jsnb1nEaK0ISAiXE3L`;\r\n    const Respuesta = await fetch(url);\r\n    const {data} = await Respuesta.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInLeft\">\r\n            <img src = { url } alt = { title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GrillaGif = ({categoria}) => {\r\n\r\n    const {data: Imagenes, loading} = useFetchGifs( categoria );\r\n\r\n   \r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__lightSpeedInRight\"> { categoria } </h3>\r\n\r\n            { \r\n            \r\n                <div className=\"card-grid\">\r\n                    \r\n                    { loading && <p>Cargando.. </p>  }\r\n\r\n                    {\r\n                        Imagenes.map(img =>(\r\n                                <GifGridItem                         \r\n                                key = {img.id}\r\n                                {...img}\r\n                                />\r\n                        ))\r\n                    } \r\n\r\n                \r\n                </div>\r\n            \r\n            }\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n\r\n    const [State, setState] = useState({\r\n        data: [],\r\n        loading : true\r\n    });\r\n\r\n\r\n     useEffect(() => {\r\n\r\n        getGifs( categoria )\r\n        .then(img => {\r\n\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            });\r\n          \r\n        });\r\n\r\n     }, [categoria]);\r\n\r\n    return State;\r\n}","import React, { Fragment, useState } from 'react'\r\nimport { AgregarCategoria } from './Componentes/AgregarCategoria';\r\nimport { GrillaGif } from './Componentes/GrillaGif';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [Categorias, setCategorias] = useState([\"Joji\"]);\r\n\r\n    // const AgregaCategoria = (e) =>{   \r\n    //    setCategorias( [...Categorias, \"HunterXHunter \"] );\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n           <h2>GifExpertApp</h2> \r\n           <AgregarCategoria setCategorias= { setCategorias } />\r\n           <hr/>\r\n\r\n           <ul>\r\n              {\r\n                  Categorias.map( categoria => (\r\n                        <GrillaGif \r\n                        key = { categoria }\r\n                        categoria= { categoria }\r\n                        />\r\n                  ))\r\n              }\r\n           </ul>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}